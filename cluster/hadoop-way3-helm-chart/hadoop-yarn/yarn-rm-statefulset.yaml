kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: bigdata-hadoop-yarn-rm
  labels:
    app: hadoop
    component: yarn-rm
    release: bigdata
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hadoop
      component: yarn-rm
      release: bigdata
  template:
    metadata:
      labels:
        app: hadoop
        component: yarn-rm
        release: bigdata
    spec:
      hostPID: false
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      nodeSelector:
        hadoop-yarn-resourcemanager-yarn: "true"
      volumes:
        - name: jmx-config
          configMap:
            name: jmx-configmap
        - name: hadoop-config
          configMap:
            name: bigdata-hadoop
            defaultMode: 420
      containers:
        - name: jmx-exporter
          env:
            - name: SERVICE_PORT
              value: "8007"
          image: "registry.mufankong.top/bigdata/jmx-prometheus-exporter:0.12.0-openjdk"
          imagePullPolicy: Always
          ports:
            - name: metrics
              containerPort: 8007
          volumeMounts:
            - name: jmx-config
              mountPath: /opt/jmx_exporter/config.yml
              subPath: yarn-resourcemanager-config.yml
          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /metrics
              port: 8007
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 60
          readinessProbe:
            failureThreshold: 8
            httpGet:
              path: /metrics
              port: 8007
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 60
        - name: yarn-rm
          image: 'registry.mufankong.top/bigdata/poker/hadoop:2.7.2'
          env:
            - name: TZ
              value: "Asia/Shanghai"
          command:
            - /bin/bash
            - /tmp/hadoop-config/bootstrap.sh
            - '-d'
          ports:
            - name: web
              containerPort: 8088
              protocol: TCP
          resources:
            limits:
              cpu: '2'
              memory: 2Gi
            requests:
              cpu: 10m
              memory: 256Mi
          volumeMounts:
            - name: hadoop-config
              mountPath: /tmp/hadoop-config
          livenessProbe:
            httpGet:
              path: /ws/v1/cluster/info
              port: 8088
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              path: /ws/v1/cluster/info
              port: 8088
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 2
          imagePullPolicy: Always
      terminationGracePeriodSeconds: 0
      securityContext: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 5
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: hadoop
                    component: yarn-rm
                    release: bigdata
                topologyKey: kubernetes.io/hostname
  serviceName: bigdata-hadoop-yarn-rm
  podManagementPolicy: OrderedReady

